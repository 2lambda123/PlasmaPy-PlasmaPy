name: CI

on:
  push:
    branches:
    - main
    - stable
    - v0.*.x
    tags:
    - v*
  pull_request:
  workflow_dispatch:

env:
  SKIP_DOCUMENTATION_LABEL: 'GA Skip Documentation'
  SKIP_COMPREHENSIVE_LABEL: 'GA Skip: Comprehensive Tests'
  SKIPS_ALLOWED_LABEL: 'GA Skip: Merge Allowed'

  SKIP_DOCUMENTATION: false
  SKIP_COMPREHENSIVE: false
  SKIPS_ALLOWED: false

  SKIPS_DONE: false

jobs:
  skips-allowed:
    if: ${{ github.event_name == 'pull_request' }}
    name: Merge Allowed?
    runs-on: ubuntu-latest

    steps:
      - name: Skip Documentation?
        run: |
          echo "Label is '${{ env.SKIP_DOCUMENTATION_LABEL }}'"
          SKIP=${{ contains(github.event.pull_request.labels.*.name, env.SKIP_DOCUMENTATION_LABEL) }}
          echo $SKIP
          echo "dSKIP=$(SKIP)" >> $GITHUB_ENV
          echo "Documentation can be skipped: ${{ env.SKIP_DOCUMENTATION }}"

#      - name: Were tests skipped?
#        run: echo ${{ env.SKIPS_DONE }}
#      - name: Is skipping allowed?
#        run: |
#          echo ${{ env.SKIPS_ALLOWED }}
#          if ${{ env.SKIPS_DONE && !env.SKIPS_ALLOWED }}; then
#            exit 1
#          fi

  initial-tests:
    if: false
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:

        - name: Python 3.10
          os: ubuntu-latest
          python: '3.10'
          toxenv: py310

        - name: Linters
          os: ubuntu-latest
          python: 3.8
          toxenv: linters

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}
    - name: Install Python dependencies
      run: python -m pip install --progress-bar off --upgrade tox codecov
    - name: Run tests
      run: tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}
  comprehensive-tests:
    if: false
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    needs: initial-tests
    strategy:
      fail-fast: false
      matrix:
        include:

        - name: Python 3.8 with minimal dependencies
          os: ubuntu-latest
          python: 3.8
          toxenv: py38-all-minimal

        - name: Python 3.8, all tests, code coverage
          os: ubuntu-latest
          python: 3.8
          toxenv: py38-all-cov

        - name: Python 3.8 (Windows)
          os: windows-latest
          python: 3.8
          toxenv: py38-all
          toxposargs: --durations=50

        - name: Python 3.8 (MacOS X)
          os: macos-latest
          python: 3.8
          toxenv: py38-all

        - name: Python 3.9
          os: ubuntu-latest
          python: 3.9
          toxenv: py39


    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}
    - name: Install Python dependencies
      run: python -m pip install --progress-bar off --upgrade tox codecov
    - name: Install language-pack-fr and tzdata
      if: startsWith(matrix.name, 'Documentation')
      run: sudo apt-get install graphviz pandoc
    - name: Run tests
      run: tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}
    - name: Upload coverage to codecov
      if: ${{ contains(matrix.toxenv,'-cov') }}
      uses: codecov/codecov-action@v2.1.0
      with:
        file: ./coverage.xml
  documentation:
    if: ${{ !(contains( github.event.pull_request.labels.*.name, 'GA Skip Documentation')) }}
    name: Documentation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Install Python dependencies
      run: python -m pip install --progress-bar off --upgrade tox
    - name: Install language-pack-fr and tzdata
      run: sudo apt-get install graphviz pandoc
    - name: Run tests
      run: tox  -e build_docs -- -q
  build-n-publish:
    name: Packaging
    runs-on: ubuntu-18.04
    needs:
    - comprehensive-tests
    - documentation
    steps:
    - uses: actions/checkout@v3
    - name: Get history and tags for SCM versioning to work
      run: |
        git fetch --prune --unshallow
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Install requirements
      run: |
        pip install --progress-bar off --upgrade pip
        pip install --progress-bar off setuptools numpy wheel setuptools_scm twine
    - name: Build a binary wheel
      run: python setup.py bdist_wheel
    - name: Build a source tarball
      run: python setup.py sdist
    - name: Twine check
      run: twine check dist/*
    - name: Install PlasmaPy in all variants
      run: |
        pip install --progress-bar off .[all,dev]
        pip install --progress-bar off -e .[all,dev]
        python setup.py develop
    - name: Publish distribution, if tagged, ðŸ“¦ to PyPI
      if: ${{ startsWith(github.ref, 'refs/tags') && !endsWith(github.ref, 'dev') }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_access_token }}
