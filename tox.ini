[tox]
envlist = py312,build_docs_pins
isolated_build = True

[testenv]
package = wheel
wheel_build_env = .pkg
allowlist_externals =
    /bin/bash
    /usr/bin/bash
    cat
    echo
setenv =
    MPLBACKEND = agg
    COLUMNS = 80
    PIP_INDEX_URL = {env:PIP_INDEX_URL:https://pypi.anaconda.org/scipy-wheels-nightly/simple}
    PIP_EXTRA_INDEX_URL = {env:PIP_EXTRA_INDEX_URL:https://pypi.org/simple}
    PYTEST_COMMAND = pytest --pyargs plasmapy --durations=5 --tb=short

extras = tests
deps =
    astropydev: git+https://github.com/astropy/astropy
    matplotlibdev: git+https://github.com/matplotlib/matplotlib
    numpydev: numpy
    sphinxdev: git+https://github.com/sphinx-doc/sphinx
    xarraydev: git+https://github.com/pydata/xarray
    pytest_cov_all: pytest-cov
    # pytest-github-actions-annotate-failures
commands =
    pytest_all: {env:PYTEST_COMMAND} {posargs}
    pytest_skipslow: {env:PYTEST_COMMAND} {posargs} -m "not slow"
    pytest_doctests_all: {env:PYTEST_COMMAND} {posargs} --doctest-modules --doctest-continue-on-failure
    pytest_doctests_skipslow: {env:PYTEST_COMMAND} {posargs} --doctest-modules --doctest-continue-on-failure -m "not slow"
    pytest_cov_all: {env:PYTEST_COMMAND} {posargs} --cov=plasmapy --cov-report=xml --cov-config={toxinidir}{/}pyproject.toml --cov-append --cov-report xml:coverage.xml

description =
    run tests
    astropydev: with the development version of astropy
    matplotlibdev: with the development version of matplotlib
    numpydev: with the development version of numpy
    sphinxdev: with the development version of sphinx
    xarraydev: with the development version of xarray
    minimal: with minimal versions of dependencies

[testenv:py312-pins]
basepython = python3.12
deps = -r{toxinidir}/requirements/requirements_tests_py312.txt

[testenv:py311-pins]
basepython = python3.11
deps = -r{toxinidir}/requirements/requirements_tests_py311.txt

[testenv:py310-pins]
basepython = python3.10
deps = -r{toxinidir}/requirements/requirements_tests_py310.txt

[testenv:py310-minimal]
basepython = python3.10
deps = -r{toxinidir}/requirements/requirements_tests_minimal_py310.txt

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:requirements]
deps =
    uv
changedir = {toxinidir}
    BUILD_REQS = python -m uv pip compile pyproject.toml --upgrade
commands =
    # Build the main requirements file to contain a full dev environment,
    # and include annotations.
    {env:BUILD_REQS} -p 3.12 -o requirements.txt --all-extras
    # Build requirements used in CI.
    {env:BUILD_REQS} -p 3.12 -o requirements/requirements_docs_py312.txt --extra docs --no-annotate --no-header
    {env:BUILD_REQS} -p 3.12 -o requirements/requirements_tests_py312.txt --extra tests --no-annotate --no-header
    {env:BUILD_REQS} -p 3.11 -o requirements/requirements_tests_py311.txt --extra tests --no-annotate --no-header
    {env:BUILD_REQS} -p 3.10  -o requirements/requirements_tests_py310.txt --extra tests --no-annotate --no-header
    # Build requirements for minimal dependencies used in CI. Set
    # resolution to "lowest-direct" since additional requirements are
    # necessary when using "lowest".
    {env:BUILD_REQS} -p 3.10  -o requirements/requirements_tests_minimal_py310.txt --extra tests --resolution=lowest-direct

[testenv:build_docs]
changedir = {toxinidir}
extras = docs
setenv =
    HOME = {envtmpdir}
commands =
    sphinx-build docs docs{/}_build{/}html -W -n --keep-going -b html {posargs}

[testenv:build_docs_pins]
changedir = {toxinidir}
setenv =
    HOME = {envtmpdir}
    PYDEVD_DISABLE_FILE_VALIDATION=1
commands =
    sphinx-build docs docs{/}_build{/}html -W -n --keep-going -b html {posargs}
deps = -r{toxinidir}/requirements/requirements_docs_py312.txt

[testenv:linkcheck]
changedir = {toxinidir}
setenv =
    HOME = {envtmpdir}
    PYDEVD_DISABLE_FILE_VALIDATION=1
commands =
    sphinx-build docs docs{/}_build{/}html -W -n -q --keep-going -b linkcheck {posargs}
deps = -r{toxinidir}/requirements.txt

[testenv:build_docs-sphinxdev]
changedir = {toxinidir}
extras = docs
setenv =
    HOME = {envtmpdir}
commands = sphinx-build docs docs{/}_build{/}html -W -n --keep-going -b html {posargs}
deps =
    git+https://github.com/sphinx-doc/sphinx
description =
    sphinxdev: with the development version of sphinx

[testenv:build_docs_no_examples]
changedir = {toxinidir}
extras = docs
setenv =
    HOME = {envtmpdir}
commands =
    sphinx-build -D nbsphinx_execute='never' docs docs{/}_build{/}html -b html {posargs}

[testenv:linters]
deps =
    cffconvert
    pygments
commands =
    cffconvert --validate

[testenv:py310-minimal-pypi-import]
basepython = python3.10
extras =
deps =
commands = python -c 'import plasmapy'

[testenv:mypy]
deps =
    mypy >= 1.8.0
commands =
    mypy plasmapy --install-types --non-interactive --show-error-context --show-error-code-links --pretty
